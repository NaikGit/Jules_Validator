spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=validation-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

app.kafka.topic.instant-payment-inbound=instant.payment.inbound

# Kafka Producer Properties
spring.kafka.producer.bootstrap-servers=${spring.kafka.consumer.bootstrap-servers} # Use the same as consumer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all # Ensure messages are acknowledged by all replicas

app.kafka.topic.instant-payment-validated=instant.payment.validated

# MongoDB Configuration
spring.data.mongodb.uri=mongodb://localhost:27017/payment_validation

# Business Rule Configurations
validation.rules.amount.min=0.01
validation.rules.amount.max=1000000.00
validation.rules.currency.allowed=USD,EUR,GBP,JPY,CHF,CAD,AUD
validation.rules.participant.supported-prefixes=BANK,CUST
validation.rules.cutoff.time=17:00:00
validation.rules.duplicate.cache.size=1000
validation.rules.duplicate.cache.ttl-seconds=3600 # TTL for duplicate check (e.g., 1 hour)

# Audit Log Configuration
audit.payload.max-length=1000
